class User < ApplicationRecord
  # Include default devise modules. Others available are:
  # :confirmable, :recoverable, :lockable, :timeoutable, :omniauthable, :trackable
  devise :database_authenticatable,
         :registerable,
         :rememberable,
         :validatable,
         :lastseenable,
         authentication_keys: [:uid]

  validates :uid,
            presence: true,
            uniqueness: true,
            numericality: { only_integer: true }
            # format: { with: /\A(010|011|016|018|019)[0-9]{7,8}\z/ },
            # length: { in: 10..11 },
  validates :name,
            presence: true

  def tmp_password
    birthday.year.to_s.slice(2..3) + (birthday.month > 9 ? birthday.month.to_s : '0' + birthday.month.to_s) + (birthday.day > 9 ? birthday.day.to_s : '0' + birthday.day.to_s)
  end

  def email_required?
    false
  end

  def email_changed?
    false
  end

  def self.tmp_user_create
    return if User.all.count > 1
    users = [
      ['01091740793', '윤석기', '남', '문', '861204'],
      ['1708008', '강민채', '여', '이', '991027'],
      ['1708007', '전은주', '여', '이', '990306'],
      ['1708006',	'박지영', '여', '이', '990319'],
      ['1708005',	'이소명', '여', '이', '990623'],
      ['1707011',	'유윤종', '남', '이', '991110'],
      ['1707010',	'전민규', '남', '이', '990515'],
      ['1707009',	'허건',	  '남', '이',	'990803'],
      ['1707008',	'박성수',	'남',	'이',	'990701'],
      ['1707007',	'이재훈',	'남',	'이',	'990302'],
      ['1707004',	'성문창',	'남',	'이',	'990324'],
      ['1707002',	'이준혁',	'남',	'이',	'990412'],
      ['1706023',	'이하영',	'여',	'이',	'990804'],
      ['1706017',	'조은',	  '여',	'이',	'990319'],
      ['1706016',	'조연정',	'여',	'이',	'990219'],
      ['1706013',	'김린',	  '여',	'이',	'990811'],
      ['1705016',	'조영준',	'남',	'이',	'990516'],
      ['1705014',	'김성민',	'남',	'이',	'990724'],
      ['1705013',	'장호원',	'남',	'이',	'990308'],
      ['1705012',	'최근록',	'남',	'이',	'990412'],
      ['1705011',	'조민규',	'남',	'이',	'000205'],
      ['1705010',	'이상욱',	'남',	'이',	'990402'],
      ['1705009',	'박성범',	'남',	'이',	'990914'],
      ['1705008',	'김세건',	'남',	'이',	'990417'],
      ['1705007',	'권영후',	'남',	'이',	'991108'],
      ['1705006',	'이경학',	'남',	'이',	'990921'],
      ['1704024',	'선명철',	'남',	'이',	'990322'],
      ['1704022',	'이수민',	'남',	'이',	'990304'],
      ['1704021',	'홍유택',	'남',	'이',	'990711'],
      ['1704014',	'정환욱',	'남',	'이',	'990224'],
      ['1704011',	'이정명',	'남',	'이',	'990201'],
      ['1704003',	'서동진',	'남',	'이',	'000510'],
      ['1703022',	'권민성',	'여',	'이',	'990325'],
      ['1703018',	'이강현',	'여',	'이',	'991123'],
      ['1703014',	'박하음',	'여',	'이',	'990623'],
      ['1703013',	'김현경',	'여',	'이',	'000215'],
      ['1702025',	'황찬영',	'남',	'이',	'000516'],
      ['1702023',	'유의찬',	'남',	'이',	'990329'],
      ['1702022',	'강동희',	'남',	'이',	'991227'],
      ['1702020',	'정병준',	'남',	'이',	'990912'],
      ['1702019',	'우승민',	'남',	'이',	'991004'],
      ['1702015',	'서준영',	'남',	'이',	'981105'],
      ['1702011',	'정기주',	'남',	'이',	'990825'],
      ['1702010',	'윤지용',	'남',	'이',	'000302'],
      ['1702009',	'배한규',	'남',	'이',	'990524'],
      ['1701012',	'권슬현',	'남',	'이',	'990703'],
      ['1701011',	'이준형',	'남',	'이',	'990614'],
      ['1701009',	'신규정',	'남',	'이',	'990724'],
      ['1701007',	'정재창',	'남',	'이',	'990326'],
      ['1708004',	'김민경',	'여',	'문',	'990517'],
      ['1708003',	'김민지B',	'여',	'문',	'990328'],
      ['1708002',	'박예지',	'여',	'문',	'990706'],
      ['1708001',	'김주연',	'여',	'문',	'990901'],
      ['1707006',	'김동현',	'남',	'문',	'990823'],
      ['1707005',	'박세훈',	'남',	'문',	'990608'],
      ['1707003',	'최유진',	'남',	'문',	'991022'],
      ['1707001',	'신동윤',	'남',	'문',	'990215'],
      ['1706024',	'김수지',	'여',	'문',	'000111'],
      ['1706007',	'이예주',	'여',	'문',	'000208'],
      ['1706006',	'이다영',	'여',	'문',	'991018'],
      ['1705015',	'김현묵',	'남',	'문',	'990326'],
      ['1705002',	'권영빈',	'남',	'문',	'990410'],
      ['1703008',	'신정원',	'여',	'문',	'990201'],
      ['1703004',	'김민하',	'여',	'문',	'990708']
    ]

    users.each do |user|
      uid = user[0]
      name = user[1]
      gender = user[2] == '남' ? true : false
      liberal = user[3] == '문' ? true : false
      user[4] =
        if user[4][0,1] == '0'
          '20' + user[4]
        else
          '19' + user[4]
        end
      birthday = Date.parse(user[4][0,4] + '-' + user[4][4,2] + '-' + user[4][6,2])
      password = birthday.year.to_s.slice(2..3) + (birthday.month > 9 ? birthday.month.to_s : '0' + birthday.month.to_s) + (birthday.day > 9 ? birthday.day.to_s : '0' + birthday.day.to_s)
      User.create(uid: uid, name: name, gender: gender, liberal: liberal, birthday: birthday, password: password)
    end
  end
end
