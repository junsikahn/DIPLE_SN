/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or any plugin's vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require fullcalendar
 *= require semantic-ui-calendar
 *= require dragula
 *= require noty
 *= require katex
 *= require_self
 */

@import "semantic-ui";

/* Mobile */
@media only screen and (max-width: 767px) {
  [class*="mobile hidden"],
  [class*="tablet only"]:not(.mobile),
  [class*="computer only"]:not(.mobile),
  [class*="largescreen only"]:not(.mobile),
  [class*="widescreen only"]:not(.mobile),
  [class*="or lower hidden"] {
    display: none !important;
  }
}

/* Tablet / iPad Portrait */
@media only screen and (min-width: 768px) and (max-width: 991px) {
  [class*="mobile only"]:not(.tablet),
  [class*="tablet hidden"],
  [class*="computer only"]:not(.tablet),
  [class*="largescreen only"]:not(.tablet),
  [class*="widescreen only"]:not(.tablet),
  [class*="or lower hidden"]:not(.mobile) {
    display: none !important;
  }
}

/* Computer / Desktop / iPad Landscape */
@media only screen and (min-width: 992px) and (max-width: 1199px) {
  [class*="mobile only"]:not(.computer),
  [class*="tablet only"]:not(.computer),
  [class*="computer hidden"],
  [class*="largescreen only"]:not(.computer),
  [class*="widescreen only"]:not(.computer),
  [class*="or lower hidden"]:not(.tablet):not(.mobile) {
    display: none !important;
  }
}

/* Large Monitor */
@media only screen and (min-width: 1200px) and (max-width: 1919px) {
  [class*="mobile only"]:not([class*="largescreen"]),
  [class*="tablet only"]:not([class*="largescreen"]),
  [class*="computer only"]:not([class*="largescreen"]),
  [class*="largescreen hidden"],
  [class*="widescreen only"]:not([class*="largescreen"]),
  [class*="or lower hidden"]:not(.computer):not(.tablet):not(.mobile) {
    display: none !important;
  }
}

/* Widescreen Monitor */
@media only screen and (min-width: 1920px) {
  [class*="mobile only"]:not([class*="widescreen"]),
  [class*="tablet only"]:not([class*="widescreen"]),
  [class*="computer only"]:not([class*="widescreen"]),
  [class*="largescreen only"]:not([class*="widescreen"]),
  [class*="widescreen hidden"],
  [class*="widescreen or lower hidden"] {
    display: none !important;
  }
}

.clearfix {
  position: relative;
  zoom: 1;
  &::before, &::after {
    content: '';
    display: block;
    clear: both;
  }
}

.top-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 1rem 0;
  border-bottom: 1px solid #f2f6f9;
  background-color: #fff;
  z-index: 10;
}
.center-main {
  min-height: 100vh;
  padding: 7em 0 5em 0;
}
.bottom-footer {
  margin: 5em 0 0 !important;
  padding: 5em 0 !important;
}

input[type='file'] {
  display: none;
}

@media only screen and (max-width: 767px) {
  .ui.stackable.cards .card:first-child {
    margin-top: 1em !important;
  }
}

@media only screen and (min-width: 768px) {
  .ui.form .fields:last-child,
  .ui.form .fields .field:last-child {
    margin-bottom: 0;
  }
}

.year_select .text:not(.default)::after,
.year_select .item::after {
  content: 'ë…„'
}

.with_hint .tooltip,
.with_hint .hint {
  float: right;
  color: lightgrey;
}

.square_seg {
  width: 100%; height: 100%; margin: 0 auto;
  .square_img {
    width: 100%; overflow: hidden;
    &::before { content: ''; display: block; width: 100%; padding-top: 100%; }
    img { position: absolute; top: 0; width: 100%; height: 100%; }
  }
}

.ui.floated.header { margin-bottom: 0em; }
.ui.inverted.segment > .ui.header .ui.sub.header { color: #fff; }
.ui.modal > .header:first-of-type {
  border-top-left-radius: 0.28571429rem;
  border-top-right-radius: 0.28571429rem;
}

#test_screen {
  margin: 0 !important;
  width: 100% !important;
  height: 100% !important;
  overflow: hidden;
}
#test_screen > .content {
  height: 100% !important; padding: 20px !important;
  .test_wrapper { max-width: 1442px; margin: 0 auto; height: 100%; overflow: hidden; border: 1px solid lightgrey; border-radius: .3em;
    .problems_header { height: 50px; overflow: scroll; border-top: 0; }
    .problems_wrapper, .answers_wrapper { position: relative; display: inline-block; height: 100%; vertical-align: top; overflow: hidden; }
    .problems_wrapper { width: 75%; box-shadow: 1px 0 lightgrey;
      // .problems_row { height: calc(100% - 50px); overflow: scroll; -webkit-overflow-scrolling: touch; }
      // .problems_row_divider { position: absolute; top: 50px; left: 50%; width: 1px; height: calc(100% - 50px); background: lightgrey;}
      // .problems_column { display: inline-block; width: 50%; min-height: 100%; padding: 20px; vertical-align: top;
      //   .problem_container { padding-bottom: 40px; }
      //   .problem_container:last-of-type { padding-bottom: 0; }
      // }
      .problems_seg { width: 100%; height: calc(100% - 50px); overflow: hidden; }
      .problems_row { min-width: 100%; height: 100%; }
      .problems_row_divider { display: inline-block; float: left; width: 1px; height: 100%; margin-left: -1px; background: lightgrey;}
      .problems_column { display: inline-block; float: left; width: 540px; padding: 20px; vertical-align: top; }
    }
    .answers_wrapper { width: 25%; box-shadow: -1px 0 lightgrey;
      .answers_seg { height: calc(100% - 100px); overflow: scroll; -webkit-overflow-scrolling: touch; }
      .answer_radio .button { margin: 0; padding: 0; width: 18px; height: 30px; line-height: 30px; }
      .answer_input { padding-right: 0.8em !important; }
      .submit.button, .answers_score { height: 50px; }
    }
  }
}

.problem_container { padding-bottom: 40px; }
.problem_container:last-of-type { padding-bottom: 0; }
.problem_container img { max-width: 100%; }
.problem_seg { overflow-x: scroll; overflow-y: hidden; }

@media only screen and (min-width: 769px) and (max-width: 1480px) {
  #test_screen {
    .test_wrapper { max-width: 900px !important;
      .problems_wrapper { width: 60% !important;
        .problems_seg { overflow-y: scroll; -webkit-overflow-scrolling: touch; }
        .problems_row_divider { display: none; }
        .problems_column { width: 100% !important; min-height: initial !important; }
      }
      .answers_wrapper { width: 40% !important; }
    }
  }
}

@media only screen and (max-width: 768px) {
  #test_screen {
    .test_wrapper { max-width: 900px !important;
      .problems_wrapper { width: 100% !important; height: 70% !important;
        .problems_header .ui.labels { display: none; }
        .problems_row_divider { display: none; }
        .problems_column { width: 100% !important; min-height: initial !important; }
      }
      .answers_wrapper { width: 100% !important; height: 30% !important; border-top: 1px dotted lightgrey;
        form { overflow: scroll; -webkit-overflow-scrolling: touch; }
        .problems_header { display: none; }
        .answers_seg { height: initial !important; min-height: calc(100% - 50px); overflow: hidden !important; border: 0; margin: 0; width: 100%;
          tbody { display: table-row-group !important; }
          tr { display: table-row !important; }
          td { display: table-cell !important; padding-top: 20px 0 !important; padding-bottom: 20px 0 !important; }
        }
      }
    }
  }
}
