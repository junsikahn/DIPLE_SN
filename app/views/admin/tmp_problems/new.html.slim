div#ebs_upload
  div.mb-3.text-right
    button.btn.btn-secondary :class="isUploading ? 'loading' : ''" v-if="!isUploaded" :key="1" @click.prevent="ebsPreview" EBS 문제 업로드
    button.btn.btn-success :class="isUploading ? 'loading' : ''" v-else="" :key="2" @click.prevent="ebsUpload" 업로드하기
  table.table.table-bordered
    thead.thead-default
      tr
        th.text-center 순서
        th.text-center 문제
    tbody
      tr v-for="(problem, order) in tmp_problems"
        td v-text="order + 1"
        td
          div.problem-container
            div.problem-info.d-flex.justify-content-between.align-items-end.flex-wrap
              div.d-inline-flex
                span.problem-order v-html="problem.order == undefined ? (problem.id ? 'ID ' + problem.id  : 'NEW') : problem.order + '번'"
                span.problem-score v-html="problem.score + '점'"
              div.d-inline-flex.justify-content-end.align-items-end.w-75
                span.problem-subject v-html="problem.subject_id ? problem.subject.path : '미분류'" :class='{ "text-danger": !problem.subject_id }'
                span.problem-level.d-flex.bg-light.text-warning
                  i.fa :class="[ problem.level >= 1 ? 'fa-star' : 'fa-star-o' ]"
                  i.fa :class="[ problem.level >= 2 ? 'fa-star' : 'fa-star-o' ]"
                  i.fa :class="[ problem.level == 3 ? 'fa-star' : 'fa-star-o' ]"
            div.problem-wrapper
              div.problem-content v-html="problem.content"
              div.problem-exm v-if="problem.exm_1"
                div.problem-exm-wrapper v-for="(exm, index) in [problem.exm_1, problem.exm_2, problem.exm_3, problem.exm_4, problem.exm_5]" :key="index"
                  span.problem-exm-index v-text="index + 1" :class="[ problem.answer == index + 1 ? 'active' : '' ]"
                  span.problem-exm-content v-html="exm"
              div.problem-answer-input v-else=""
                input.form-control type="text" readonly="true" :value="problem.answer"
              div.problem-explanation v-html="problem.explanation"
              div.problem-answer
                i.fa.fa-caret-right.mr-1
                span.problem-answer-wrapper
                  span.problem-answer-seg.align-bottom :class="{ 'is-objective' : problem.exm_1 }" v-html="problem.answer"
              div.problem-tags
                a.badge.badge-secondary.mt-1.mr-1 v-for="tag in problem.problem_tags" :key="tag.id" v-html="tag.name" href="#" @click.prevent=""


javascript:
  var ebs = new Vue({
    el: '#ebs_upload',
    data: {
      file: null,
      tmp_problems: [],
      isUploading: false,
      isUploaded: false
    },
    methods: {
      ebsPreview: function() {
        var input = document.createElement('input');
        input.type = 'file';
        input.addEventListener('change', function(e){
          var file = FileAPI.getFiles(this)[0];
          if (file.type !== 'text/xml') return alert('XML 파일만 업로드할 수 있습니다');
          ebs.file = file;
          var formData = new FormData();
          formData.append('file', file);
          FileAPI.readAsDataURL(file, function(evt){
            if (evt.type == 'load') {
              $.ajax({
                url: '/admin/tmp_problems',
                type: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function(data) {
                  ebs.tmp_problems = data.results;
                  ebs.isUploaded = true;
                },
                beforeSend: function() { ebs.isUploading = true },
                complete: function() { ebs.isUploading = false }
              });
            }
          });
        }, false);
        input.click();
      },
      ebsUpload: function() {
        var formData = new FormData();
        formData.append('file', ebs.file);
        $.ajax({
          url: '/admin/tmp_problems/upload',
          type: 'POST',
          processData: false,
          contentType: false,
          data: formData,
          beforeSend: function() { ebs.isUploading = true },
          complete: function() { ebs.isUploading = false }
        });
      }
    },
    updated: function() {
      renderMathInElement(document.body, {
        delimiters: [
          {left: "$$", right: "$$", display: true},
          {left: "$",  right: "$",  display: false}
        ]
      });
    }
  });
