= simple_nested_form_for @admin_problem, url: @admin_problem.new_record? ? admin_problem_collection_problems_path(@admin_problem_collection, @admin_problem) : admin_problem_collection_problem_path(@admin_problem_collection, @admin_problem), html: { id: 'problem_form' } do |f|
  div.ui.grid
    div.ui.column.eight.wide
      div.problem_container.clearfix style="max-width: 500px; margin: 0 auto;"
        span.ui.horizontal.black.label 문제번호
        span.ui.horizontal.basic.label
          span.preview_score 0
          | 점
        div.ui.top.attached.black.segment.clearfix.problem_seg
          div.preview_content contenteditable="true" data-target="admin_problem_content"
        div.ui.attached.segment
          div.ui.very.relaxed.list
            div.item
              span.ui.circular.basic.mini.horizontal.label 1
              div.preview_exm_1 contenteditable="true" data-target="admin_problem_exm_1"
            div.item
              span.ui.circular.basic.mini.horizontal.label 2
              div.preview_exm_2 contenteditable="true" data-target="admin_problem_exm_2"
            div.item
              span.ui.circular.basic.mini.horizontal.label 3
              div.preview_exm_3 contenteditable="true" data-target="admin_problem_exm_3"
            div.item
              span.ui.circular.basic.mini.horizontal.label 4
              div.preview_exm_4 contenteditable="true" data-target="admin_problem_exm_4"
            div.item
              span.ui.circular.basic.mini.horizontal.label 5
              div.preview_exm_5 contenteditable="true" data-target="admin_problem_exm_5"
        div.ui.attached.secondary.segment.problem_seg
          div.preview_explanation contenteditable="true" data-target="admin_problem_explanation"
        div.ui.bottom.attached.right.aligned.secondary.segment.problem_seg
          | 정답은&nbsp;
          span.ui.circular.mini.horizontal.label.basic.preview_answer contenteditable="true" data-target="admin_problem_answer"
          | 입니다
    div.ui.column.eight.wide
      = f.error_notification
      table.ui.table
        thead
          tr
            th 입력해주세요
        tbody
          tr
            td
              = f.input :audio, input_html: { data: { preview: 'audio' } }
              - if @admin_problem.audio?
                div.file_preview.center.aligned
                  == @admin_problem.audio_file_name
                  == audio_tag @admin_problem.audio.url(:original), controls: true, style: 'width: 100%;'
          tr
            td
              = f.input :content, input_html: { class: 'problem_content' }
              = f.input :exm_1, input_html: { rows: 1, class: 'problem_exm_1' }
              = f.input :exm_2, input_html: { rows: 1, class: 'problem_exm_2' }
              = f.input :exm_3, input_html: { rows: 1, class: 'problem_exm_3' }
              = f.input :exm_4, input_html: { rows: 1, class: 'problem_exm_4' }
              = f.input :exm_5, input_html: { rows: 1, class: 'problem_exm_5' }
          tr
            td
              div.two.fields
                = f.input :answer, as: :numeric, input_html: { class: 'problem_answer' }
                = f.input :score, input_html: { class: 'problem_score' }
              = f.input :explanation, input_html: { class: 'problem_explanation' }
      table.ui.table
        thead
          tr
            th.sixteen.wide 저장하시겠습니까?
            th.collapsing
              = f.button :button, '저장'

div.ui.tiny.modal#formula_screen
  i.close.icon
  div.header 수식 입력
  div.content.ui.form
    div.ui.segment.top.attached
      div#formula_preview
    div.ui.segment.bottom.attached
      textarea#formula_input
    a href="https://khan.github.io/KaTeX/function-support" target="_blank" 수식참조
  div.actions
    div.ui.cancel.button 취소
    div.ui.approve.positive.button 입력하기

css:
  .preview_content:empty::before,
  .preview_exm_1:empty::before,
  .preview_exm_2:empty::before,
  .preview_exm_3:empty::before,
  .preview_exm_4:empty::before,
  .preview_exm_5:empty::before,
  .preview_explanation:empty::before {
    content: '내용을 입력해주세요';
    color: #ccc;
  }

  .preview_content,
  .preview_explanation {
    padding: 3px 0;
  }

  .preview_exm_1,
  .preview_exm_2,
  .preview_exm_3,
  .preview_exm_4,
  .preview_exm_5 {
    display: inline-block;
    width: calc(100% - 30px);
    padding: 3px 0;
    float: right;
  }

  [contenteditable]:focus {
    position: relative;
    outline: none;
    background-color: rgba(33, 33, 33, .05);
  }

  [contenteditable]:focus::before {
    content: '\f27a';
    font-family: 'Icons';
    color: lightgrey;
    position: absolute;
    top: 0;
    right: 0;
    padding: 3px 5px;
    animation: flash 3s infinite;
  }

  [contenteditable]:empty::after {
    content: '*';
    color: red;
    float: right;
    margin-right: -3px;
    line-height: 1px;
  }

  .context-menu-icon-image::before { content: '\f03e'; font-family: 'Icons'; }
  .context-menu-icon-wpforms::before { content: '\f298'; font-family: 'Icons'; }
  .context-menu-icon-calculator::before { content: '\f1ec'; font-family: 'Icons'; }
  
  @media only screen and (max-width:767px)  { .ui.tiny.modal { width:95%;   margin:0 0 0 -47.5% } }
  @media only screen and (min-width:768px)  { .ui.tiny.modal { width:52.8%; margin:0 0 0 -26.4% } }
  @media only screen and (min-width:992px)  { .ui.tiny.modal { width:510px; margin:0 0 0 -255px } }
  @media only screen and (min-width:1200px) { .ui.tiny.modal { width:540px; margin:0 0 0 -270px } }
  @media only screen and (min-width:1920px) { .ui.tiny.modal { width:540px; margin: 0 0 0 -285px } }


javascript:
  $(function(){
    $('.subject.select').dropdown({
    }).on('ajax:before', function(){
      $(this).addClass('loading');
    }).on('ajax:success', function(xhr, data, status){
      $(this).removeClass('loading');
      var select = $(this).find('select');
      var details = JSON.parse(data['details']);
      if (details.length === 0) {
      } else {
        select.html('');
        $.each(details, function(index, value){
          select.append('<option value="' + value.id + '">' + value.path + '</option>');
        });
        select.append('<option value="#{@admin_problem_collection.subject.id}">처음부터 다시 선택하려면 누르세요</option>');
        $(this).dropdown('show');
      }
    });

    $.each($(':file'), function(index, input){
      var preview_type = $(this).data('preview');
      if (preview_type) {
        $(this).before('<button class="ui button fluid">파일 업로드</button>');
        $(this).hide();
        var $button = $(this).prev();
        $button.on('click', function(e){
          e.preventDefault();
          input.click();
          var preview = $(this).parentsUntil('tr', this).find('.file_preview');
          preview.remove();
        });
        $(this).on('change', function(e){
          var files = FileAPI.getFiles(this);
          $.each(files, function(index, file){
            var div = document.createElement('div');
            var audio = document.createElement(preview_type);
            FileAPI.readAsDataURL(file, function(evt){
              if (evt.type == 'load') {
                audio.src = evt.result;
                audio.controls = 'controls';
                audio.style.width = '100%';
                div.innerHTML = evt.target.name;
                div.className = 'file_preview center aligned';
                $button.parent().after(div);
                div.appendChild(audio);
                $button.removeClass('loading');
              } else if (evt.type == 'progress') {
                $button.addClass('loading');
              } else {
               // Error
              }
            });
          });
        });
      }
    });

    var render_preview = function(){
      $.each($('.preview_content'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_content').val()); });
      $.each($('.preview_exm_1'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_1').val()); });
      $.each($('.preview_exm_2'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_2').val()); });
      $.each($('.preview_exm_3'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_3').val()); });
      $.each($('.preview_exm_4'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_4').val()); });
      $.each($('.preview_exm_5'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_5').val()); });
      $.each($('.preview_answer'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_answer').val()); });
      $.each($('.preview_score'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_score').val()); });
      $.each($('.preview_explanation'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_explanation').val()); });
      renderMathInElement(document.getElementById('problem_form'),
        {
          delimiters: [
            {left: "$$", right: "$$", display: true},
            {left: "$",  right: "$",  display: false}
          ]
        }
      );
    };
    render_preview();

    $('#formula_input').on('input', function(e){
      $('#formula_preview').html('$' + $(this).val() + '$');
      renderMathInElement(document.getElementById('formula_preview'),
        {
          delimiters: [
            {left: "$$", right: "$$", display: true},
            {left: "$",  right: "$",  display: false}
          ]
        }
      );
    });

    var current_editor;
    var target_input;
    var editors = [];

    function sync(current_editor, target_input) {
      var html = document.createElement('div');
      html.innerHTML = current_editor.getHTML();
      $.each($(html).find('span.katex'), function(index2, katex) {
        var annotation = '<div>$' + $(katex).find('annotation').text() + '$</div>';
        $(katex).replaceWith(annotation);
      });
      target_input.value = html.innerHTML.replace(/\<\/div\>\<div/g, '</div>\r<div');
    }

    $.each($('[contenteditable]'), function(index, editor){
      editors[index] = wysiwyg({ element: editor, hijackContextmenu: true });
      $(editor).on('focus', function(e){
        keyboardJS.setContext('input');
        current_editor = editors[index];
        target_input = document.getElementById($(e.target).data('target'));
        if (current_editor.getHTML() == '') current_editor.insertHTML('<div><br></div>');
      }).on('blur', function(e){
        sync(current_editor, target_input);
        keyboardJS.setContext('global');
      }).on('input', function(e){
        sync(current_editor, target_input);
      }).on('contextmenu', function(e){
        current_editor.collapseSelection();
      }).contextMenu({
        selector: 'img',
        items: {
            'deleteImg' : {name: '삭제', icon: 'delete'},
        },
        callback: function(key, options) {
          if (key == 'deleteImg') {
            $(this).remove();
          }
        }
      }).contextMenu({
        selector: 'div.formula',
        items: {
            'deleteFormula' : {name: '삭제', icon: 'delete'},
        },
        callback: function(key, options) {
          if (key == 'deleteFormula') {
            $(this).parentsUntil('[contenteditable]', 'span.katex').remove();
          }
        }
      }).contextMenu({
        selector: '*',
        items: {
            'addImg'     : { name: '그림 추가하기', icon: 'image' },
            'addDiv'     : { name: '블럭 추가하기', icon: 'wpforms' },
            'addFormula' : { name: '수식 추가하기', icon: 'calculator' },
            'sep1'       : '---------',
            'deleteAll'  : { name: '내용 모두 삭제',    icon: 'delete' }
        },
        callback: function(key, options) {
          if (key == 'addImg') {
            var input = document.createElement('input');
            input.type = 'file';
            input.addEventListener('change', function(e){
              var file = FileAPI.getFiles(this)[0];
              FileAPI.readAsDataURL(file, function(evt){
                if (evt.type == 'load') {
                  current_editor.insertImage(evt.result);
                } else if (evt.type == 'progress') {
                } else {
                }
              });
            }, false);
            input.click();
          } else if (key == 'addDiv') {
            current_editor.insertHTML('<div class="ui segment"><br></div><div><br></div>');
          } else if (key == 'addFormula') {
            current_editor.insertHTML('<div id="formula_target">수식 입력 위치</div>');
            $('#formula_screen').modal({
              observeChanges: true,
              onHidden: function(){
                $('#formula_input').val('');
                $('#formula_preview').html('');
                $('#formula_target').remove();
              },
              onApprove: function(){
                var formula = $('#formula_preview>span');
                if (formula.length === 0) {
                  alert('수식 오류가 있습니다');
                  return false;
                } else {
                  if ($('#formula_target').next().prop('tagName') == 'BR') $('#formula_target').next().remove();
                  // $('#formula_target').replaceWith(formula.html());
                  $('#formula_target').parent().replaceWith('$' + $('#formula_input').val() + '$').addClass('formula');
                }
              }
            }).modal('show');
          } else if (key == 'deleteAll') {
            $(editor).html('');
            target_input.value = '';
          }
        }
      });
    });

    keyboardJS.withContext('input', function(){
      keyboardJS.on('enter', function(e){
        document.execCommand('formatBlock', false, 'div');
        console.log(current_editor.getSelectedHTML());
      });
      keyboardJS.on(['control + u', 'command + u'], function(e){
        e.preventDefault();
        current_editor.underline('shell');
      });
      // keyboardJS.on('shift + t', function(e){
        // e.preventDefault();
        // current_editor.insertHTML('<div><br></div><div class="ui segment"><br></div><div><br></div>');
      // });
    });
  });
