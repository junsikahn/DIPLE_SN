= simple_nested_form_for @admin_problem, url: @admin_problem.new_record? ? admin_problems_path(@admin_problem) : admin_problem_path(@admin_problem), html: { id: 'problem_form' } do |f|
  div.ui.grid
    div.ui.column.eight.wide
      div.problem_container.clearfix
        div
          span.ui.horizontal.black.label = "#{@admin_problem.id}"
          span.ui.horizontal.basic.label style="cursor: pointer;" onclick="$('#admin_problem_score').focus();"
            span.preview_score == f.object.score.to_s + '점'
        div.ui.top.attached.black.segment.clearfix.problem_seg
          div.preview_content contenteditable="true" data-target="admin_problem_content" == f.object.content
        div.ui.attached.segment.exm_seg
          div.ui.very.relaxed.list.exm_list
            div.item.exm_item
              span.ui.circular.basic.mini.horizontal.label 1
              div.preview_exm_1 contenteditable="true" data-target="admin_problem_exm_1" == f.object.exm_1
            div.item.exm_item
              span.ui.circular.basic.mini.horizontal.label 2
              div.preview_exm_2 contenteditable="true" data-target="admin_problem_exm_2" == f.object.exm_2
            div.item.exm_item
              span.ui.circular.basic.mini.horizontal.label 3
              div.preview_exm_3 contenteditable="true" data-target="admin_problem_exm_3" == f.object.exm_3
            div.item.exm_item
              span.ui.circular.basic.mini.horizontal.label 4
              div.preview_exm_4 contenteditable="true" data-target="admin_problem_exm_4" == f.object.exm_4
            div.item.exm_item
              span.ui.circular.basic.mini.horizontal.label 5
              div.preview_exm_5 contenteditable="true" data-target="admin_problem_exm_5" == f.object.exm_5
        div.ui.attached.secondary.segment.problem_seg
          div.preview_explanation contenteditable="true" data-target="admin_problem_explanation" == f.object.explanation
        div.ui.bottom.attached.right.aligned.secondary.segment.problem_seg style="cursor: pointer;" onclick="$('#admin_problem_answer').focus();"
          | 정답은&nbsp;
          span.ui.circular.mini.horizontal.label.basic.preview_answer == f.object.answer
          | 입니다
        div.ui.small.basic.buttons
          div.ui.icon.button onclick="document.execCommand('bold');"
            i.bold.icon
          div.ui.icon.button onclick="document.execCommand('italic');"
            i.italic.icon
          div.ui.icon.button onclick="document.execCommand('underline');"
            i.underline.icon
          div.ui.icon.button onclick="document.execCommand('strikeThrough');"
            i.strikethrough.icon
          div.ui.icon.button onclick="document.execCommand('superscript');"
            i.superscript.icon
          div.ui.icon.button onclick="document.execCommand('subscript');"
            i.subscript.icon
          div.ui.icon.button onclick="document.execCommand('justifyLeft');"
            i.align.left.icon
          div.ui.icon.button onclick="document.execCommand('justifyCenter');"
            i.align.center.icon
          div.ui.icon.button onclick="document.execCommand('justifyRight');"
            i.align.right.icon
          div.ui.icon.button
            i.calculator.icon
            / svg viewBox="0 0 18 18"
            /   path fill="rgba(0, 0, 0, 0.6)" d="M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z"
            /   rect fill="rgba(0, 0, 0, 0.6)" height="1.6" rx="0.8" ry="0.8" width="5" x="5.15" y="6.2"
            /   path fill="rgba(0, 0, 0, 0.6)" d="M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z"
          div.ui.icon.button
            i.area.chart.icon
    div.ui.column.eight.wide
      = f.error_notification
      table.ui.table
        thead
          tr
            th 입력해주세요
        tbody
          tr
            td
              = f.association :subject,
                              include_blank: '단원을 선택해주세요',
                              collection: f.object.subject_id.nil? ? Standard::Subject.main_subjects.collect{ |subject| [subject.path, subject.id] } : [[f.object.subject.path, f.object.subject.id], ['처음부터 다시 선택하려면 누르세요', @admin_problem.subject.id]],
                              input_html: { class: 'subject select', data: { url: "#{list_admin_problems_path(@admin_problem)}", remote: true, type: :json } }
          tr
            td
              = f.input :content, input_html: { rows: 1, class: 'problem_content' }
              = f.input :exm_1, input_html: { rows: 1, class: 'problem_exm_1' }
              = f.input :exm_2, input_html: { rows: 1, class: 'problem_exm_2' }
              = f.input :exm_3, input_html: { rows: 1, class: 'problem_exm_3' }
              = f.input :exm_4, input_html: { rows: 1, class: 'problem_exm_4' }
              = f.input :exm_5, input_html: { rows: 1, class: 'problem_exm_5' }
          tr
            td
              div.two.fields
                = f.input :answer, as: :numeric, input_html: { class: 'problem_answer' }
                = f.input :score, input_html: { class: 'problem_score' }
              = f.input :explanation, input_html: { rows: 1, class: 'problem_explanation' }
      table.ui.table
        thead
          tr
            th.sixteen.wide 저장하시겠습니까?
            th.collapsing
              = f.button :button, '저장'

div.ui.tiny.modal#formula_screen
  i.close.icon
  div.header 수식 입력
  div.content.ui.form
    div.ui.segment.top.attached
      div#formula_preview
    div.ui.segment.bottom.attached
      textarea#formula_input
    a href="https://khan.github.io/KaTeX/function-support" target="_blank" 수식참조
  div.actions
    div.ui.cancel.button 취소
    div.ui.approve.positive.button.disabled#formula_submit 입력하기

css:
  .preview_content:empty::before,
  .preview_exm_1:empty::before,
  .preview_exm_2:empty::before,
  .preview_exm_3:empty::before,
  .preview_exm_4:empty::before,
  .preview_exm_5:empty::before,
  .preview_explanation:empty::before {
    content: '내용을 입력해주세요';
    color: #ccc;
  }

  .preview_content,
  .preview_explanation {
    padding: 3px 0;
  }

  .preview_exm,
  .preview_exm_1,
  .preview_exm_2,
  .preview_exm_3,
  .preview_exm_4,
  .preview_exm_5 {
    display: inline-block;
    width: calc(100% - 30px);
    padding: 3px 0;
    float: right;
  }

  [contenteditable=true]:focus {
    position: relative;
    outline: none;
    background-color: rgba(33, 33, 33, .05);
  }

  [contenteditable=true]:focus::before {
    content: '\f27a';
    font-family: 'Icons';
    color: lightgrey;
    position: absolute;
    top: 0;
    right: 0;
    padding: 3px 5px;
    animation: flash 3s infinite;
  }

  [contenteditable=true]:empty::after {
    content: '*';
    color: red;
    float: right;
    margin-right: -3px;
    line-height: 1px;
  }

  .context-menu-icon-image::before { content: '\f03e'; font-family: 'Icons'; }
  .context-menu-icon-graph::before { content: '\f080'; font-family: 'Icons'; }
  .context-menu-icon-wpforms::before { content: '\f298'; font-family: 'Icons'; }
  .context-menu-icon-calculator::before { content: '\f1ec'; font-family: 'Icons'; }

  @media only screen and (max-width:767px)  { .ui.tiny.modal { width:95%;   margin:0 0 0 -47.5% } }
  @media only screen and (min-width:768px)  { .ui.tiny.modal { width:52.8%; margin:0 0 0 -26.4% } }
  @media only screen and (min-width:992px)  { .ui.tiny.modal { width:510px; margin:0 0 0 -255px } }
  @media only screen and (min-width:1200px) { .ui.tiny.modal { width:540px; margin:0 0 0 -270px } }
  @media only screen and (min-width:1920px) { .ui.tiny.modal { width:540px; margin: 0 0 0 -285px } }

  #formula_preview:empty::before {
    content: '수식을 입력해주세요';
    color: #ccc;
  }

  .formula {
    cursor: pointer;
    transition: background .25s, box-shadow .5s;
  }
  .formula.inline {
    display: inline-block;
  }
  .formula.block {
    display: block;
  }
  .formula:hover, .formula:active {
    background-color: rgba(0, 0, 0, 0.1);
    box-shadow: 0 1px 0 hotpink;
  }

  .graph:empty::before {
    position: absolute;
    content: '';
    top: 0%;
    left: 0%;
    background: rgba(255, 255, 255, 0.8);
    width: 100%;
    height: 100%;
    border-radius: 0.28571429rem;
    z-index: 100;
  }
  .graph:empty::after {
    position: absolute;
    content: '';
    top: 50%;
    left: 50%;
    margin: -1.5em 0em 0em -1.5em;
    width: 3em;
    height: 3em;
    -webkit-animation: segment-spin 0.6s linear;
    animation: segment-spin 0.6s linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    border-radius: 500rem;
    border-color: #767676 rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1);
    border-style: solid;
    border-width: 0.2em;
    box-shadow: 0px 0px 0px 1px transparent;
    visibility: visible;
    z-index: 101;
  }

javascript:
  $(function(){
    $('.subject.select').dropdown({
    }).on('ajax:before', function(){
      $(this).addClass('loading');
    }).on('ajax:success', function(xhr, data, status){
      $(this).removeClass('loading');
      var select = $(this).find('select');
      var details = JSON.parse(data['details']);
      if (details.length === 0) {
      } else {
        select.html('');
        $.each(details, function(index, value){
          select.append('<option value="' + value.id + '">' + value.path + '</option>');
        });
        select.append('<option value="0">처음부터 다시 선택하려면 누르세요</option>');
        $(this).dropdown('show');
      }
    });

    $.each($(':file'), function(index, input){
      var preview_type = $(this).data('preview');
      if (preview_type) {
        $(this).before('<button class="ui button fluid">파일 업로드</button>');
        $(this).hide();
        var $button = $(this).prev();
        $button.on('click', function(e){
          e.preventDefault();
          input.click();
          var preview = $(this).parentsUntil('tr', this).find('.file_preview');
          preview.remove();
        });
        $(this).on('change', function(e){
          var files = FileAPI.getFiles(this);
          $.each(files, function(index, file){
            var div = document.createElement('div');
            var audio = document.createElement(preview_type);
            FileAPI.readAsDataURL(file, function(evt){
              if (evt.type == 'load') {
                audio.src = evt.result;
                audio.controls = 'controls';
                audio.style.width = '100%';
                div.innerHTML = evt.target.name;
                div.className = 'file_preview center aligned';
                $button.parent().after(div);
                div.appendChild(audio);
                $button.removeClass('loading');
              } else if (evt.type == 'progress') {
                $button.addClass('loading');
              } else {
               // Error
              }
            });
          });
        });
      }
    });

    var render_preview = function(){
      // $.each($('.preview_content'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_content').val()); });
      // $.each($('.preview_exm_1'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_1').val()); });
      // $.each($('.preview_exm_2'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_2').val()); });
      // $.each($('.preview_exm_3'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_3').val()); });
      // $.each($('.preview_exm_4'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_4').val()); });
      // $.each($('.preview_exm_5'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_exm_5').val()); });
      // $.each($('.preview_answer'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_answer').val()); });
      // $.each($('.preview_score'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_score').val()); });
      // $.each($('.preview_explanation'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_explanation').val()); });

      $.each($('span.katex'), function(index, span) {
        var wrapper = $(this).parent().hasClass('katex-display') ? $(this).parent().parent() : $(this).parent();
        var is_inline = $(this).parent().hasClass('katex-display') ? 'formula block' : 'formula inline';
        wrapper.attr('draggable', true).attr('contenteditable', false).addClass(is_inline);
      });
      $.each($('form').find('textarea'), function(){
        $(this).css('height', 'auto');
        $(this).height(this.scrollHeight - 22);
        $(this).on('input', function(){
          var st = $(window).scrollTop();
          $(this).css('height', 'auto');
          $(this).height(this.scrollHeight - 22);
          $(window).scrollTop(st);
        });
      });

      $('#formula_input').on('input', function(e){
        if ($(this).val().length == 0) {
          $('#formula_preview').html('');
        } else {
          var is_inline = $(this).data('block') ? '$$' : '$';
          $('#formula_preview').html(is_inline + $(this).val() + is_inline);
        }
        renderMathInElement(document.getElementById('formula_preview'),
          {
            delimiters: [
              { left: "$$", right: "$$", display: true },
              { left: "$",  right: "$",  display: false }
            ]
          }
        );
        if ($('#formula_preview').find('annotation') && $('#formula_preview').find('annotation').text().length > 0) {
          $('#formula_submit').removeClass('disabled');
        } else {
          $('#formula_submit').addClass('disabled');
        }
      });

      // $('#admin_problem_answer').on('input', function(){
      //   $.each($('.preview_answer'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_answer').val()); });
      // });
      // $('#admin_problem_score').on('input', function(){
      //   $.each($('.preview_score'), function(){ $(this).html($(this).closest('div.ui.grid').find('.problem_score').val()); });
      // });
    };

    var current_editor;
    var target_input;
    var editors = [];

    function getByteLength(s,b,i,c){
      for(b=i=0;c=s.charCodeAt(i++);b+=c>>11?3:c>>7?2:1);
      return b;
    } // 문자열 s의 바이트 길이를 반환

    function sync() {
      if (current_editor === undefined || target_input === undefined) return;
      var html = document.createElement('div');
      html.innerHTML = current_editor.getHTML();
      $.each($(html).find('div.graph'), function() {
        $(this).html('');
      });
      $.each($(html).find('span.katex'), function() {
        var wrapper = $(this).parent().hasClass('katex-display') ? $(this).parent().parent() : $(this).parent();
        var is_inline = $(this).parent().hasClass('katex-display') ? '$$' : '$';
        var annotation = $(this).find('annotation').text();
        wrapper.replaceWith(is_inline + annotation + is_inline);
      });
      target_input.value = html.innerHTML.replace(/\<\/div\>\<div/g, '</div>\r<div').replace(/\sclass=""/g, '');

      // console.log(getByteLength(target_input.value) + ' bytes');

      $(target_input).css('height', 'auto');
      $(target_input).height(target_input.scrollHeight - 22);
    }

    function openFormulaInput(annotation) {
      var is_inline = $('#formula_target').hasClass('block') ? '$$' : '$';
      $('#formula_screen').modal({
        observeChanges: true,
        onShow: function(){
          if (annotation) {
            $('#formula_input').val(annotation);
            $('#formula_preview').html(is_inline + annotation + is_inline);
            renderMathInElement(document.getElementById('formula_preview'),
              {
                delimiters: [
                  {left: "$$", right: "$$", display: true},
                  {left: "$",  right: "$",  display: false}
                ]
              }
            );
          }
          if (is_inline == '$$') {
            $('#formula_input').data('block', true);
          } else {
            $('#formula_input').data('block', false);
          }
        },
        onHidden: function(){
          $('#formula_input').val('');
          $('#formula_preview').html('');
          annotation == null ? $('#formula_target').remove() : $('#formula_target').removeAttr('id');
          sync();
        },
        onApprove: function(){
          var formula = $('#formula_preview>span');
          if (formula.length === 0) {
            alert('수식 오류가 있습니다');
          } else {
            $('#formula_target').html(formula.html()).removeAttr('id').addClass('formula').attr('draggable', true).attr('contenteditable', false);
          }
        }
      }).modal('show');
    }

    $(document).contextMenu({
      selector: '[contenteditable=true]',
      items: {
          'addImg'     : { name: '그림 추가하기', icon: 'image' },
          'addGraph'   : { name: '그래프 추가하기', icon: 'graph' },
          'addDiv'     : { name: '블럭 추가하기', icon: 'wpforms' },
          'addFormula' : { name: '수식 추가하기', icon: 'calculator' },
          'sep1'       : '---------',
          'deleteAll'  : { name: '내용 모두 삭제',    icon: 'delete' }
      },
      callback: function(key, options) {
        if (key == 'addImg') {
          var input = document.createElement('input');
          input.type = 'file';
          input.addEventListener('change', function(e){
            var file = FileAPI.getFiles(this)[0];
            FileAPI.readAsDataURL(file, function(evt){
              if (evt.type == 'load') {
                document.execCommand('insertImage', false, evt.result);
                document.execCommand('formatBlock', false, 'div');
              } else if (evt.type == 'progress') {
              } else {
              }
            });
          }, false);
          input.click();
        } else if (key == 'addGraph') {
          var sel = window.getSelection();
          if (sel && sel.rangeCount) {
            var range = sel.getRangeAt(0);
            range.collapse(true);
            var div = document.createElement('div');
            div.id = 'graph_target';
            div.appendChild(document.createElement('graph'));
            range.insertNode(div);
            range.collapse(true);
            sel.removeAllRanges();
            sel.addRange(range);
            openGraphInput();
          }
        } else if (key == 'addDiv') {
          current_editor.insertHTML('<div class="ui segment"><br></div><div><br></div>');
        } else if (key == 'addFormula') {
          // document.execCommand('insertHTML', false, '<span id="formula_target"><math></math></span>');
          var sel = window.getSelection();
          if (sel && sel.rangeCount) {
            var range = sel.getRangeAt(0);
            range.collapse(true);
            var span = document.createElement('span');
            span.id = 'formula_target';
            span.appendChild(document.createElement('math'));
            range.insertNode(span);
            range.collapse(true);
            sel.removeAllRanges();
            sel.addRange(range);
            openFormulaInput(null);
          }
        } else if (key == 'deleteAll') {
          if (confirm('내용을 삭제하시겠어요?')) {
            $(this).html('');
            target_input.value = '';
          }
        }
      }
    });

    $.each($('[contenteditable=true]'), function(index, editor){
      editors[index] = wysiwyg({ element: editor });
      $(editor).on('focus', function(e){
        keyboardJS.setContext('input');
        current_editor = editors[index];
        target_input = document.getElementById($(e.target).data('target'));
        if (current_editor.getHTML().length === 0) current_editor.insertHTML('<div><br></div>');
      }).on('blur', function(e){
        sync();
        keyboardJS.setContext('global');
      }).on('input', function(e){
        if (current_editor.getHTML().length < 9) current_editor.insertHTML('<div><br></div>');
        sync();
      }).on('paste', function(e){
        e.preventDefault();
        var text = (e.originalEvent || e).clipboardData.getData('text/plain').replace(/\r/g, '');
        window.document.execCommand('insertText', false, text);
      }).on('DOMNodeInserted', function(e){
        if (e.target.nodeName == 'SPAN' && e.target.children.length == 0) $(e.target).replaceWith($(e.target).html());
      }).on('contextmenu', function(e){
        keyboardJS.setContext('global');
      }).on('dblclick', 'span.formula', function(e){
        var annotation = $(this).find('annotation').text();
        $(this).attr('id', 'formula_target');
        openFormulaInput(annotation);
      }).contextMenu({
        selector: 'img',
        items: {
            'deleteImg' : {name: '삭제', icon: 'delete'},
        },
        callback: function(key, options) {
          if (key == 'deleteImg') {
            if (confirm('이미지를 삭제하시겠어요?')) {
              $(this).remove();
              sync();
            }
          }
        }
      }).contextMenu({
        selector: 'span.formula',
        items: {
            'editFormula' : {name: '수식 수정하기', icon: 'edit'},
            'blockFormula' : {name: '블럭으로 변경하기', icon: 'edit'},
            'sep1'       : '---------',
            'deleteFormula' : {name: '수식 삭제하기', icon: 'delete'},
        },
        callback: function(key, options) {
          if (key == 'editFormula') {
            var annotation = $(this).find('annotation').text();
            $(this).attr('id', 'formula_target');
            openFormulaInput(annotation);
          } else if (key == 'blockFormula') {
          } else if (key == 'deleteFormula') {
            if (confirm('수식을 삭제하시겠어요?')) {
              $(this).remove();
              sync();
            }
          }
        }
      }).contextMenu({
        selector: 'div.graph',
        items: {
            'editGraph'   : {name: '그래프 수정하기', icon: 'edit'},
            'sep1'        : '---------',
            'deleteGraph' : {name: '그래프 삭제하기', icon: 'delete'},
        },
        callback: function(key, options) {
          if (key == 'editGraph') {
          } else if (key == 'deleteGraph') {
            if (confirm('그래프를 삭제하시겠어요?')) {
              $(this).remove();
              sync();
            }
          }
        }
      });
    });

    keyboardJS.withContext('input', function(){
      keyboardJS.on(['control + u', 'command + u'], function(e){
        e.preventDefault();
        current_editor.underline('shell');
      });
      keyboardJS.on(['control + f', 'command + f'], function(e){
        e.preventDefault();
        current_editor.removeFormat();
      });
      keyboardJS.on(['control + d', 'command + d'], function(e){
        e.preventDefault();
        $(current_editor.getElement()).contextMenu();
      });
    });

    render_preview();
  });

= render partial: 'graph_vue.js'
