table.table.table-bordered#problems-list
  thead.thead-default
    tr
      th.text-center 문제
  tbody
    tr v-for="(problem, order) in problems" :key="problem.id"
      td.p-0.text-center style="position: relative;"
        div.m-auto style="width: 160px;position: absolute;right: 50%;top: 50px;transform: translateX(-270px);"
          button.btn.btn-dark.btn-block
            span> v-text="'ID ' + problem.id"
            i.fa :class='[ problem.updated_at ? "fa-check text-green" : "fa-remove text-danger"  ]'
          hr.w-25
          button.btn.btn-outline-success.btn-block @click="reload(order)"
            i.fa.fa-refresh>
            | 새로고침
          hr.w-25
          button.btn.btn-outline-warning.btn-block @click="edit(problem.id)"
            i.fa.fa-edit>
            | 수정하기
          hr.w-25
          button.btn.btn-outline-danger.btn-block :href='"/admin/problems/" + problem.id' data-confirm='Are you sure?' method="delete"
            i.fa.fa-trash>
            | 삭제하기
        problem-preview :problem="problem" :order="order + 1" :show_id="show_id"

javascript:
  new Vue({
    el: '#problems-list',
    data: {
      problems: #{{ problems.as_json(include: [:subject, {problem_images: {methods: :image_url}}, :problem_tags, :problem_source]).to_json.html_safe }},
      show_id: #{{ show_id }}
    },
    methods: {
      reload: function(order) {
        var self = this;
        var problem_id = this.problems[order].id;
        $.ajax({
          url: '/admin/problems/' + problem_id,
          type: 'GET',
          dataType: 'json',
          success: function(data) { self.problems.splice(order, 1, data); }
        });
      },
      edit: function(id) {
        var url = '/admin/problems/' + id + '/edit';
        window.open(url);
      }
    }
  });
